syntax = "proto3";

package api.ipfs.blockstore;

import "google/protobuf/empty.proto";

option go_package = "ipfs-servers/api/contentrouting;contentrouting";
option java_multiple_files = true;
option java_package = "api.ipfs.content.routing";


service ContentRouting {
  // Provide adds the given cid to the content routing system. If 'true' is
  // passed, it also announces it, otherwise it is just kept in the local
  // accounting of which objects are being provided.
  rpc Provide (ProvideReq) returns (google.protobuf.Empty);

  // Search for peers who are able to provide a given key
  //
  // When count is 0, this method will return an unbounded number of
  // results.
  rpc FindProvidersAsync(GetProvidersReq) returns (stream AddrInfo);
}

message Cid {
  bytes str = 1;
}

message ProvideReq {
  Cid cid = 1;
  bool provide = 2;
}

message GetProvidersReq {
  Cid cid = 1;
  int64 count = 2;
}

message AddrInfo {
  string id = 1;
  repeated bytes multiaddr = 2;
}
